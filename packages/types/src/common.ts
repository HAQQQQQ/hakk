export type Preference = {
	music: string[];
	movie: string[];
	hobby: string[];
};

export type Events = {
	name: string;
};

export enum Gender {
	MALE = "male",
	FEMALE = "female",
}

export enum UserType {
	ADMIN = "admin",
	REGULAR = "regular",
	GUEST = "guest",
	EVENT_COORDINATOR = "event-coordinator",
}

export enum RelationshipStatus {
	SINGLE = "single",
	DIVORCED = "divorced",
	SEPARATED = "separated",
	WIDOWED = "widowed",
}

export enum RelationshipGoal {
	CASUAL = "casual",
	DATING = "dating",
	RELATIONSHIP = "relationship",
	MARRIAGE = "marriage",
}

export enum FrequencyHabit {
	NEVER = "never",
	RARELY = "rarely",
	SOCIALLY = "socially",
	REGULARLY = "regularly",
	HEAVILY = "heavily",
	PREFER_NOT_TO_SAY = "prefer-not-to-say",
}

export enum Religion {
	CHRISTIANITY = "christianity",
	CATHOLICISM = "catholicism",
	JUDAISM = "judaism",
	ISLAM = "islam",
	HINDUISM = "hinduism",
	BUDDHISM = "buddhism",
	SIKHISM = "sikhism",
	ATHEIST = "atheist",
	AGNOSTIC = "agnostic",
	SPIRITUAL = "spiritual",
	OTHER = "other",
	PREFER_NOT_TO_SAY = "prefer-not-to-say",
}

export enum Education {
	HIGH_SCHOOL = "high-school",
	SOME_COLLEGE = "some-college",
	ASSOCIATES_DEGREE = "associates-degree",
	BACHELORS_DEGREE = "bachelors-degree",
	MASTERS_DEGREE = "masters-degree",
	DOCTORATE = "doctorate",
	PROFESSIONAL_DEGREE = "professional-degree",
	TRADE_SCHOOL = "trade-school",
	OTHER = "other",
	PREFER_NOT_TO_SAY = "prefer-not-to-say",
}

export enum MeasurementUnit {
	INCHES = "in",
	CENTIMETERS = "cm",
}

export enum DistanceUnit {
	MILES = "mi",
	KILOMETERS = "km",
	METERS = "m",
	YARDS = "yd",
	FEET = "ft",
}

export enum PartnerChildrenPreference {
	NO_PREFERENCE = "no-preference",
	YES = "yes",
	NO = "no",
	OPEN = "open",
	UNSURE = "unsure",
}

export type Distance = {
	unit: DistanceUnit;
	value: number;
};

export type Height = {
	height: number;
	unitOfMeasure: MeasurementUnit;
};

export type Photo = {
	id?: string; // Optional since it might be generated by the database
	profileId?: number; // Optional, as it might be set during insertion
	url: string;
	isPrimary: boolean;
	isVerified: boolean;
	createdAt?: Date;
	updatedAt?: Date;
};

export type AgeRange = {
	min: number;
	max: number;
};
